name: CI to Docker Hub
on:
  push:
    #branches: [ main ]
  #pull_request:
    #branches: [ main ]
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    -
      name: Checkout
      uses: actions/checkout@v4 # v4

    -
      name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'

    -
      name: Java Environment
      run: env | grep '^JAVA'

    -
      name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    # -
    #   name: Configure git
    #   run: |
    #     git config --global committer.email "dyrnq@qq.com"
    #     git config --global committer.name "dyrnq"
    #     git config --global author.email "${GITHUB_ACTOR}@users.noreply.github.com"
    #     git config --global author.name "${GITHUB_ACTOR}"

    # -
    #   name: Checkout main branch
    #   run: |
    #     git branch -a 
    #     git checkout main


    -
      name: Build with Maven
      run: ./mvnw -B package --file pom.xml

    -
      name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v3
    -
      name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3
    -
      name: Inspect builder
      run: |
        echo "Name:      ${{ steps.buildx.outputs.name }}"
        echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
        echo "Status:    ${{ steps.buildx.outputs.status }}"
        echo "Flags:     ${{ steps.buildx.outputs.flags }}"
        echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

    - name: Build dockerfile (with no push)
      run: |
        docker buildx build \
        --platform linux/amd64,linux/arm64/v8 \
        --output "type=image,push=false" \
        --file ./Dockerfile . ${{ secrets.DOCKER_USERNAME }}/hello-springboot-docker:latest
    -
      name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build dockerfile (with push)
      run: |
        docker buildx build \
        --platform linux/amd64,linux/arm64/v8 \
        --output "type=image,push=true" \
        --file ./Dockerfile . ${{ secrets.DOCKER_USERNAME }}/hello-springboot-docker:latest
          

    # -
    #   name: Cache Docker layers
    #   uses: actions/cache@v4
    #   with:
    #     path: /tmp/.buildx-cache
    #     key: ${{ runner.os }}-buildx-${{ github.sha }}
    #     restore-keys: |
    #       ${{ runner.os }}-buildx-

    # -
    #   uses: docker/login-action@v3 
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}

    # -
    #   name: Build and push
    #   id: docker_build
    #   uses: docker/build-push-action@v6
    #   with:
    #     context: ./
    #     file: ./Dockerfile
    #     builder: ${{ steps.buildx.outputs.name }}
    #     push: true
    #     tags: dyrnq/hello-springboot-docker:latest
    #     cache-from: type=local,src=/tmp/.buildx-cache
    #     cache-to: type=local,dest=/tmp/.buildx-cache
    # -
    #   name: Image digest
    #   run: echo ${{ steps.docker_build.outputs.digest }}



    # - name: Push to GitHub Packages
    #   uses: docker/build-push-action@v1
    #   with:
    #     username: ${{ github.actor }}
    #     password: ${{ secrets.GITHUB_TOKEN }}
    #     registry: docker.pkg.github.com
    #     repository: my-org/my-repo/my-image
    #     tag_with_ref: true

    # - name: Push to Docker Hub
    #   uses: docker/build-push-action@v1
    #   with:
    #       username: ${{ secrets.DOCKER_USERNAME }}
    #       password: ${{ secrets.DOCKER_PASSWORD }}
    #       repository: my-docker-hub-namespace/my-docker-hub-repository
    #       tag_with_ref: true
    #   - name: Push to GitHub Packages
    #     uses: docker/build-push-action@v1
    #     with:
    #       username: ${{ github.actor }}
    #       password: ${{ secrets.GITHUB_TOKEN }}
    #       registry: docker.pkg.github.com
    #       repository: my-org/my-repo/my-image
    #       tag_with_ref: true



    # -  uses: docker/login-action@v1 
    #     with:
    #       username: ${{ secrets.DOCKER_USERNAME }}
    #       password: ${{ secrets.DOCKER_PASSWORD }}

    # - name: Prepare release
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   run: mvn --batch-mode release:prepare -Dusername=$GITHUB_ACTOR -Dpassword=$GITHUB_TOKEN
    # - name: Perform release
    #   env:
    #     DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
    #   run: mvn --batch-mode release:perform

# https://github.com/spring-guides/top-spring-boot-docker
# https://docs.github.com/cn/actions/guides/publishing-docker-images
# https://github.com/usha-mandya/SimpleWhaleDemo
# https://docs.docker.com/ci-cd/github-actions/
